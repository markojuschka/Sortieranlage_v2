/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sortieranlage_v2;

import javax.swing.*;
import java.util.Date;
import java.text.SimpleDateFormat;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.AdjustmentEvent;
import java.awt.event.AdjustmentListener;
import java.awt.Desktop;
import javax.swing.Timer;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;

/**
 * Dei Klasse AnlageFrame stellt die GUI Elemente der Sortieranlage in einem Fenster dar
 * und ist gleichzeitig die Startklasse der Anwendung
 * 
 * @author MJ
 */
public class AnlageFrame extends javax.swing.JFrame {

    static long counter = 0;
    static boolean sortierenbeendet = false;
    static boolean running = false;
    
    public static int pak_counter = 0;
    public static int paketStartX = 100;
    public static Icon[] pak = {    new ImageIcon("Paket1.png"), 
                                    new ImageIcon("Paket2.png"), 
                                    new ImageIcon("Paket3.png"),
                                    new ImageIcon("Paket4.png")};
  
    
    /**
     * Creates new form AnlageFrame
     */
    public AnlageFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        defaultListModel1 = new javax.swing.DefaultListModel();
        defaultListModel2 = new javax.swing.DefaultListModel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList();
        jLabel5 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sortieranlage v2");
        setBackground(new java.awt.Color(153, 153, 255));

        jScrollPane1.setBackground(new java.awt.Color(153, 153, 255));

        jList1.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jList1.setModel(defaultListModel1);
        jScrollPane1.setViewportView(jList1);

        jButton1.setBackground(new java.awt.Color(255, 255, 204));
        jButton1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 204, 0));
        jButton1.setText("START");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jScrollPane2.setBackground(new java.awt.Color(153, 153, 255));

        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        jButton2.setBackground(new java.awt.Color(255, 255, 204));
        jButton2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 0, 0));
        jButton2.setText("NOT-Aus");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setText("Timer: ");
        jLabel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel4.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N

        jLabel2.setText("Paketliste");
        jLabel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel3.setText("Log der Sortierung");
        jLabel3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jScrollPane3.setBackground(new java.awt.Color(153, 153, 255));

        jList2.setModel(defaultListModel2);
        jScrollPane3.setViewportView(jList2);

        jLabel5.setText("Rollcontainerliste");
        jLabel5.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel6.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel6.setText("(nach Regionen)");

        jLabel7.setIcon(new javax.swing.ImageIcon("/home/user2/NetBeansProjects/Sortieranlage_v2/Paket1.png")); // NOI18N

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane4.setViewportView(jTextArea2);

        jLabel8.setText("Frachtbriefe");
        jLabel8.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setPreferredSize(new java.awt.Dimension(178, 48));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 174, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 44, Short.MAX_VALUE)
        );

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Barcode");
        jLabel9.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jMenu1.setText("File");

        jMenuItem1.setText("Beenden");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                click_Beenden(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("View");

        jMenu3.setText("Frachtbriefe");
        jMenu2.add(jMenu3);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jSeparator1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(2, 2, 2)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(156, 156, 156)
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(16, 16, 16)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(24, 24, 24)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(25, 25, 25)
                                        .addComponent(jButton1)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel8)
                                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane3))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(jLabel4)
                        .addGap(46, 46, 46)
                        .addComponent(jLabel7)
                        .addGap(61, 61, 61)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel1)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jButton2)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    /**
     * ActionListener für die Submenu-Einträge der Frachtbriefe
     */
    static ActionListener alFrachtbrief = new ActionListener() {
            public void actionPerformed(ActionEvent actionEvent) {  
                JMenuItem mi = (JMenuItem)actionEvent.getSource();
                System.out.println("QUELLE: " + mi.getText());
                String html = "";
                String textzeile;
                try {
                    Desktop desktop = null;
                    if (Desktop.isDesktopSupported()) {
                        desktop = Desktop.getDesktop();
                        File fhtml = new File(Definitions.OUTPUTPATH + "/"+mi.getText()+".html");
                        desktop.open(fhtml);
                    }
                } catch (IOException e) {
                    System.out.println("File I/O error beim Lesen der HTML-Datei des Frachtbriefs.");
                }
            }
        };
    
    /**
     * Methode fügt dem Menu "View - Frachtbriefe" den Eintrag des erstellten Frachtbriefs hinzu
     * @param name vollständiger Name des Frachtbriefs
     */
    public static void addFrachtbriefMenuentry(String name) {
        JMenuItem menuItem = new JMenuItem(name);
        menuItem.addActionListener(alFrachtbrief);
        jMenu3.add(menuItem);
    }
    
    
     /**
     * Aktion "Start"-Button: startet die Sortierung
     * 
     */
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        running = true;           
    }//GEN-LAST:event_jButton1ActionPerformed

     /**
     * Aktion "NOT-Aus"-Button: hält die Sortierung an
     */
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        running = false;
    }//GEN-LAST:event_jButton2ActionPerformed

     /**
     * Aktion im Mneü "File - Beenden": beendet die Anwendung und schliesst das Fenster
     */
    private void click_Beenden(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_click_Beenden
        this.dispose();
        System.exit(0);
    }//GEN-LAST:event_click_Beenden

    
    /*    */
    
    /**
     * Methode startet die Anwendung "Sortieranlage_v2"
     * @param args Parameter beim Aufruf der Anwendung
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AnlageFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AnlageFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AnlageFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AnlageFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AnlageFrame().setVisible(true);
            }
        });
        
        
        // Pakete werden über die XML-Schnittstelle in die Anlage "eingelesen"
        // Rollcontainer werden bereitgestellt
        Sortieranlage_v2.start();
        
        // Fülle die linke Liste mit den eingelesenen Paketen
        jList1 = new JList(defaultListModel1);
        for (Paket x: Sortieranlage_v2.packages) {
            defaultListModel1.addElement("Paket " + x.id);
        }
        jList1.updateUI();
        
        
          
        // Fülle die rechte Liste mit den Leitzonen (Regionen)
        for (int x=1;x<10; x++) {
            defaultListModel2.addElement("" + x + ": 0%");
        }
        // der 10. Rollcontainer mit der Bezeichnung X wird für die manuell zu bearbeitenden Pakete genutzt
        defaultListModel2.addElement("X: 0%  (man.)");
  
        
        jScrollPane2.getVerticalScrollBar().addAdjustmentListener(new AdjustmentListener(){
            public void adjustmentValueChanged(AdjustmentEvent e){
                jTextArea1.select(jTextArea1.getHeight()+9000,0);
            }
        });
       
    
        ActionListener actionListener = new ActionListener() {
            long timeInMillis = System.currentTimeMillis();
            public void actionPerformed(ActionEvent actionEvent) {  
                counter++; 
                //System.out.println("counter " + counter); 
                if (counter < 1000) {
                    jTextField1.setText("" + counter + " msec");
                } else {
                    jTextField1.setText("" + counter/1000 + " sec   " + counter%1000 + " msec");
                }
                // wechsel Paketicon jede Viertelsekunde
                if (counter%250==0) {
                    pak_counter++;
                    if (pak_counter==4) pak_counter=0;
                    jLabel7.setIcon(pak[pak_counter]);
                }
                
               
            }
        };
        
        Timer timer = new Timer(1, actionListener);
        timer.addActionListener(actionListener);
       
        int fertigePakete = 0;
        int[] fuellung = {0,0};
        
        
        while (!running) {
            try{ Thread.sleep(1); }
            catch(Exception e) { };
        }
        
        
        SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy.MM.dd HH:mm:ss");
        System.out.println("Datum: " + simpleDateFormat.format(new Date()));
     
        jTextArea1.setText("Start der Sortierung \n");
        jTextArea1.append(" - "+ simpleDateFormat.format(new Date()) +" -\n\n");
        jTextArea2.setText("");
        timer.start();
       
        
        while ((!sortierenbeendet) && running) {
            for (Paket x: Sortieranlage_v2.packages) {
                if ( ((counter-x.tstamp)>3000) && (x.status==Definitions.BEFORESCAN)) {
                    x.status=Definitions.ATSCAN;
                    System.out.println("*** Paket Nr " + x.id + " wird gescannt.");
                    jTextArea1.append("*** Paket Nr " + x.id + " wird gescannt.\n");
                    x.id_number = Sortieranlage_v2.scan(x);
                    
                    // generiere Barcode für das Paket
                    BarcodeMaker bm = new BarcodeMaker(x.id);
                    bm.writeBarcodetoFile(x.id);
                    bm.displaynextBarcode();
                } 
            }
            
            if (running==false){
                timer.stop();
                //timer.removeActionListener(actionListener);
                while (!running) {
                    try{ Thread.sleep(1); }
                    catch(Exception e) { };
                }
                //timer.addActionListener(actionListener);
                timer.restart();
            }
            
            for (Paket x: Sortieranlage_v2.packages) {
                if ( ((counter-x.tstamp)>6000) && (x.status==Definitions.ATSCAN)) {
                    x.status=Definitions.AFTERSCAN;
                    System.out.println("--> Paket Nr " + x.id + " verlässt Scanner.");
                    jTextArea1.append("--> Paket Nr " + x.id + " verlässt Scanner.\n");
                }
                if (((counter-x.tstamp)>8000) && (x.status==Definitions.AFTERSCAN)){
                    x.status=Definitions.ATMEASURING;
                    System.out.println("+++ Paket Nr " + x.id + " wird vermessen.");
                    jTextArea1.append("+++ Paket Nr " + x.id + " wird vermessen.\n");
                    x.dims = Sortieranlage_v2.measuring(x);
                }
                
                if (((counter-x.tstamp)>10000) && (x.status==Definitions.ATMEASURING)){
                    x.status=Definitions.FINALSTATE;
                    fertigePakete++;
                    System.out.println("Aktuell fertige Pakete: " + fertigePakete);
                    defaultListModel1.removeElementAt(0);
                    fuellung = Sortieranlage_v2.sortierePaket(x, x.id_number, x.dims);
                    if (fuellung[0]==9) {
                        System.out.println(">>> Paket Nr " + x.id + " wurde aussortiert.");
                        jTextArea1.append(">>> Paket Nr " + x.id + " wurde aussortiert.\n");
                        defaultListModel2.setElementAt("X: "+fuellung[1]+"%  (man.)", fuellung[0]);
                    }
                    else {
                        System.out.println(">>> Paket Nr " + x.id + " wurde sortiert.");
                        jTextArea1.append(">>> Paket Nr " + x.id + " wurde sortiert.\n");
                        defaultListModel2.setElementAt(""+ x.id.substring(2,3) +": "+fuellung[1]+"%", fuellung[0]);
                    }   
                    // Überprüfen, ob ein Frachtbrief zu drucken ist (Rollcontainer.toprint == true)
                    if (Sortieranlage_v2.rollcontainer[x.id_number-1].toprint) {
                        // TODO: drucke Frachtbrief!
                        jTextArea2.append(Sortieranlage_v2.rollcontainer[x.id_number-1].textFrachtbrief);
                        // nach Beenden des Frachtbriefes, den Wert von toprint wieder auf false setzen
                        Sortieranlage_v2.rollcontainer[x.id_number-1].toprint=false;
                    }
                               
                }
            }  // end of for
            
            if(fertigePakete==Paket.anzahl) {
                sortierenbeendet=true;
                timer.stop();   
                jPanel1.removeAll();
                jPanel1.repaint();
                System.out.println("### TIMER STOPPED! ###");
                jTextArea1.append("### TIMER STOPPED! ###");
            }
        }
        
        
    }  // end of main

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.DefaultListModel defaultListModel1;
    private static javax.swing.DefaultListModel defaultListModel2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private static javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private static javax.swing.JList jList1;
    private javax.swing.JList jList2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private static javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    public static javax.swing.JPanel jPanel1;
    private static javax.swing.JScrollPane jScrollPane1;
    private static javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private static javax.swing.JTextArea jTextArea1;
    private static javax.swing.JTextArea jTextArea2;
    private static javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
